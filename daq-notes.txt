The mydaq microcontroller has no onboard memory, so it has to be plugged into a pc to function.


All code examples given in forms that work for the equipment projects use.
////////////////////
// Code examples  //
////////////////////

getDevices
- lists all daq devices connected to the host computer
  d = daq.getDevices
    - only necessary if multiple daq devices are plugged into a single system, can be left out for project.


createSession
- creates identifier for other code to refer to the daq
  s = daq.createSession('ni')
    - the variable s is used in other daq functions to refer to the device 
    - 'ni' refers to the vendor of the device


addDigitalChannel
- declares a digital line as an input or output
  s.addDigitalChannel('myDAQ1', channelID, I/O)
    - channelID given in form 'port0/lineX' line can increment (such as mass declaring motor pins) line4:7
    - port0 is for digital pins
    - I/O use 'InputOnly' or 'OutputOnly' depending on purpose.


addAnalogChannel
- follows same format as addDigitalChannel
  - uses port1
- only used for the phototransistors on the analog channels


outputSingleScan
- sends voltage to output pins that are given a value of 1 in the array sent to the function eg;
  outputSingleScan(s, [0 1 0 0]);
    - where s is the daq session ( s = daq.createSession('ni'); ).
    - this would power the 2nd pin to be declared an output.


inputSingleScan
- reads values for all input pins designated should be used as a function of a variable eg;
  data = inputSingleScan(s);
    - where s is the daq session ( s = daq.createSession('ni'); ).
-if there are multiple input sources access, a particular input source with;
  data(x)
    - where x is the position ih the order in which the inputs were declared.